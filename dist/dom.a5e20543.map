{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","console","log","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","x","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.a5e20543.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    create(string) {\r\n        // template 可以容纳任意元素\r\n        const container = document.createElement(\"template\");\r\n        // trim()用来去除两边的空格\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    },\r\n    after(node, node2) {\r\n        node.parentNode.insertBefore(node2, node.nextSibling);\r\n    },\r\n    before(node, node2) {\r\n        node.parentNode.insertBefore(node2, node);\r\n    },\r\n    append(parent, node) {\r\n        parent.appendChild(node);\r\n    },\r\n    wrap(node, parent) {\r\n        dom.before(node, parent);\r\n        // append 有一个特点，它插到别的地方，就不在原来的地方了。\r\n        dom.append(parent, node);\r\n    },\r\n    remove(node) {\r\n        node.parentNode.removeChild(node);\r\n        return node;\r\n    },\r\n    empty(node) {\r\n        // 这句话等价于 const childNodes = node.childNodes;\r\n        const { childNodes } = node;\r\n        const array = [];\r\n        while (childNodes[0]) {\r\n            array.push(dom.remove(childNodes[0]));\r\n        }\r\n        return array;\r\n    },\r\n    attr(node, name, value) {   // 重载(根据参数个数不同进行不同的操作)\r\n        if (arguments.length === 3) {\r\n            return node.setAttribute(name, value)   // 如果传了三个参数，那么就设置属性和值\r\n        } else if (arguments.length === 2) {\r\n            return node.getAttribute(name)   // 如果传了两个参数，那么就读取属性的值\r\n        }\r\n    },\r\n    text(node, string) {\r\n        // 参数为两个时，text功能是修改和设置内容，参数一个时，功能变为读取内容\r\n        if (arguments.length === 2) {\r\n            if ('innerText' in node) {\r\n                node.innerText = string // ie\r\n            } else {\r\n                node.textContent = string\r\n            }\r\n        } else if (arguments.length === 1) {\r\n            if ('innerText' in node) {\r\n                return node.innerText\r\n            } else {\r\n                return node.textContent\r\n            }\r\n        }\r\n    },\r\n    html(node, string) {\r\n        if (arguments.length === 2) {\r\n            node.innerHTML = string\r\n        } else if (arguments.length === 1) {\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    style(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            // dom.style(div, 'color', 'red')\r\n            node.style[name] = value\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {\r\n                // dom.style(div, 'color')\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {\r\n                // dom.style(div, {color: 'red'})\r\n                const object = name;\r\n                for (let key in object) {\r\n                    // object[key]的结果是值，不是属性名\r\n                    console.log(object[key]);\r\n                    node.style[key] = object[key]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    class: {\r\n        add(node, className) {\r\n            node.classList.add(className)\r\n        },\r\n        remove(node, className) {\r\n            node.classList.remove(className)\r\n        },\r\n        has(node, className) {\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n    on(node, eventName, fn) {\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    off(node, eventName, fn) {\r\n        node.removeEventListener(eventName, fn)\r\n    },\r\n    find(selector, scope) {\r\n        // scope 表示范围。如果给定了范围就在范围内寻找，否则在document里寻找。\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node) {\r\n        return node.parentNode\r\n    },\r\n    children(node) {\r\n        return node.children\r\n    },\r\n    siblings(node) {\r\n        return Array.from(node.parentNode.children)\r\n            .filter(n => n !== node)\r\n    },\r\n    next(node) {\r\n        let x = node.nextSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    previous(node) {\r\n        let x = node.previousSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList, fn) {\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n    index(node) {\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for (i = 0; i < list.length; i++) {\r\n            if (list[i] === node) {\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n};"]}